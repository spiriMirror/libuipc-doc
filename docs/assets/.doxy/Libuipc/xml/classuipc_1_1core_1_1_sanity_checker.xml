<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classuipc_1_1core_1_1_sanity_checker" kind="class" language="C++" prot="public" final="yes">
    <compoundname>uipc::core::SanityChecker</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classuipc_1_1core_1_1_sanity_checker_1afa4b69c2afc1258b83e4a25cc1456401" prot="private" static="no" mutable="no">
        <type><ref refid="classuipc_1_1core_1_1_sanity_check_message_collection" kindref="compound">core::SanityCheckMessageCollection</ref></type>
        <definition>core::SanityCheckMessageCollection uipc::core::SanityChecker::m_errors</definition>
        <argsstring></argsstring>
        <name>m_errors</name>
        <qualifiedname>uipc::core::SanityChecker::m_errors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/sanity_checker.h" line="29" column="40" bodyfile="include/uipc/core/sanity_checker.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuipc_1_1core_1_1_sanity_checker_1a1d5bfbad7fca0e30f0373dc66929c8c6" prot="private" static="no" mutable="no">
        <type><ref refid="classuipc_1_1core_1_1_sanity_check_message_collection" kindref="compound">core::SanityCheckMessageCollection</ref></type>
        <definition>core::SanityCheckMessageCollection uipc::core::SanityChecker::m_warns</definition>
        <argsstring></argsstring>
        <name>m_warns</name>
        <qualifiedname>uipc::core::SanityChecker::m_warns</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/sanity_checker.h" line="30" column="40" bodyfile="include/uipc/core/sanity_checker.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuipc_1_1core_1_1_sanity_checker_1a51c3100144ea6b37a4992a0bd6e7b6ce" prot="private" static="no" mutable="no">
        <type><ref refid="classuipc_1_1core_1_1_sanity_check_message_collection" kindref="compound">core::SanityCheckMessageCollection</ref></type>
        <definition>core::SanityCheckMessageCollection uipc::core::SanityChecker::m_infos</definition>
        <argsstring></argsstring>
        <name>m_infos</name>
        <qualifiedname>uipc::core::SanityChecker::m_infos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/sanity_checker.h" line="31" column="40" bodyfile="include/uipc/core/sanity_checker.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuipc_1_1core_1_1_sanity_checker_1ab20066b73ec40ea8a7793922e12e6a25" prot="private" static="no" mutable="no">
        <type><ref refid="classuipc_1_1core_1_1internal_1_1_scene" kindref="compound">internal::Scene</ref> &amp;</type>
        <definition>internal::Scene&amp; uipc::core::SanityChecker::m_scene</definition>
        <argsstring></argsstring>
        <name>m_scene</name>
        <qualifiedname>uipc::core::SanityChecker::m_scene</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/sanity_checker.h" line="33" column="21" bodyfile="include/uipc/core/sanity_checker.h" bodystart="33" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classuipc_1_1core_1_1_sanity_checker_1a4a06c8abfebd21b3075ebaa99dd130b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>uipc::core::SanityChecker::SanityChecker</definition>
        <argsstring>(internal::Scene &amp;scene)</argsstring>
        <name>SanityChecker</name>
        <qualifiedname>uipc::core::SanityChecker::SanityChecker</qualifiedname>
        <param>
          <type><ref refid="classuipc_1_1core_1_1internal_1_1_scene" kindref="compound">internal::Scene</ref> &amp;</type>
          <declname>scene</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/sanity_checker.h" line="16" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_sanity_checker_1ae3833d3cb42bee0251c1adfc17645407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>uipc::core::SanityChecker::~SanityChecker</definition>
        <argsstring>()</argsstring>
        <name>~SanityChecker</name>
        <qualifiedname>uipc::core::SanityChecker::~SanityChecker</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/sanity_checker.h" line="17" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_sanity_checker_1a48205dd62be9cbc86e9bce15ab0b78ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SanityCheckResult</type>
        <definition>SanityCheckResult uipc::core::SanityChecker::check</definition>
        <argsstring>(std::string_view workspace)</argsstring>
        <name>check</name>
        <qualifiedname>uipc::core::SanityChecker::check</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>workspace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/sanity_checker.h" line="19" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_sanity_checker_1a31eba484d078eb8dadb21405c28ff2e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void uipc::core::SanityChecker::report</definition>
        <argsstring>()</argsstring>
        <name>report</name>
        <qualifiedname>uipc::core::SanityChecker::report</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/sanity_checker.h" line="20" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_sanity_checker_1a567862d3f0ce7accd9970ba5a9f99747" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const unordered_map&lt; U64, S&lt; <ref refid="classuipc_1_1core_1_1_sanity_check_message" kindref="compound">SanityCheckMessage</ref> &gt; &gt; &amp;</type>
        <definition>const unordered_map&lt; U64, S&lt; SanityCheckMessage &gt; &gt; &amp; uipc::core::SanityChecker::errors</definition>
        <argsstring>() const</argsstring>
        <name>errors</name>
        <qualifiedname>uipc::core::SanityChecker::errors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/sanity_checker.h" line="22" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_sanity_checker_1a5ad7fac5e2862ca1f3befa1ba4e4169e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const unordered_map&lt; U64, S&lt; <ref refid="classuipc_1_1core_1_1_sanity_check_message" kindref="compound">SanityCheckMessage</ref> &gt; &gt; &amp;</type>
        <definition>const unordered_map&lt; U64, S&lt; SanityCheckMessage &gt; &gt; &amp; uipc::core::SanityChecker::warns</definition>
        <argsstring>() const</argsstring>
        <name>warns</name>
        <qualifiedname>uipc::core::SanityChecker::warns</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/sanity_checker.h" line="23" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_sanity_checker_1aa7d11937b1c86a799ebf9be796137ede" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const unordered_map&lt; U64, S&lt; <ref refid="classuipc_1_1core_1_1_sanity_check_message" kindref="compound">SanityCheckMessage</ref> &gt; &gt; &amp;</type>
        <definition>const unordered_map&lt; U64, S&lt; SanityCheckMessage &gt; &gt; &amp; uipc::core::SanityChecker::infos</definition>
        <argsstring>() const</argsstring>
        <name>infos</name>
        <qualifiedname>uipc::core::SanityChecker::infos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/sanity_checker.h" line="24" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_sanity_checker_1afcdabce5624d848a0e491d66edd6234d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void uipc::core::SanityChecker::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>uipc::core::SanityChecker::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/sanity_checker.h" line="26" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/uipc/core/sanity_checker.h" line="13" column="1" bodyfile="include/uipc/core/sanity_checker.h" bodystart="14" bodyend="34"/>
    <listofallmembers>
      <member refid="classuipc_1_1core_1_1_sanity_checker_1a48205dd62be9cbc86e9bce15ab0b78ff" prot="public" virt="non-virtual"><scope>uipc::core::SanityChecker</scope><name>check</name></member>
      <member refid="classuipc_1_1core_1_1_sanity_checker_1afcdabce5624d848a0e491d66edd6234d" prot="public" virt="non-virtual"><scope>uipc::core::SanityChecker</scope><name>clear</name></member>
      <member refid="classuipc_1_1core_1_1_sanity_checker_1a567862d3f0ce7accd9970ba5a9f99747" prot="public" virt="non-virtual"><scope>uipc::core::SanityChecker</scope><name>errors</name></member>
      <member refid="classuipc_1_1core_1_1_sanity_checker_1aa7d11937b1c86a799ebf9be796137ede" prot="public" virt="non-virtual"><scope>uipc::core::SanityChecker</scope><name>infos</name></member>
      <member refid="classuipc_1_1core_1_1_sanity_checker_1afa4b69c2afc1258b83e4a25cc1456401" prot="private" virt="non-virtual"><scope>uipc::core::SanityChecker</scope><name>m_errors</name></member>
      <member refid="classuipc_1_1core_1_1_sanity_checker_1a51c3100144ea6b37a4992a0bd6e7b6ce" prot="private" virt="non-virtual"><scope>uipc::core::SanityChecker</scope><name>m_infos</name></member>
      <member refid="classuipc_1_1core_1_1_sanity_checker_1ab20066b73ec40ea8a7793922e12e6a25" prot="private" virt="non-virtual"><scope>uipc::core::SanityChecker</scope><name>m_scene</name></member>
      <member refid="classuipc_1_1core_1_1_sanity_checker_1a1d5bfbad7fca0e30f0373dc66929c8c6" prot="private" virt="non-virtual"><scope>uipc::core::SanityChecker</scope><name>m_warns</name></member>
      <member refid="classuipc_1_1core_1_1_sanity_checker_1a31eba484d078eb8dadb21405c28ff2e2" prot="public" virt="non-virtual"><scope>uipc::core::SanityChecker</scope><name>report</name></member>
      <member refid="classuipc_1_1core_1_1_sanity_checker_1a4a06c8abfebd21b3075ebaa99dd130b0" prot="public" virt="non-virtual"><scope>uipc::core::SanityChecker</scope><name>SanityChecker</name></member>
      <member refid="classuipc_1_1core_1_1_sanity_checker_1a5ad7fac5e2862ca1f3befa1ba4e4169e" prot="public" virt="non-virtual"><scope>uipc::core::SanityChecker</scope><name>warns</name></member>
      <member refid="classuipc_1_1core_1_1_sanity_checker_1ae3833d3cb42bee0251c1adfc17645407" prot="public" virt="non-virtual"><scope>uipc::core::SanityChecker</scope><name>~SanityChecker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
