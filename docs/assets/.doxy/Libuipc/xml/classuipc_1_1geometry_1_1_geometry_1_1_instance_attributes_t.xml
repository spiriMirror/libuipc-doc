<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t" kind="class" language="C++" prot="public">
    <compoundname>uipc::geometry::Geometry::InstanceAttributesT</compoundname>
    <includes refid="geometry_2geometry_8h" local="no">geometry.h</includes>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>IsConst</declname>
        <defname>IsConst</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a1f2e4c824fc59679810366504b917eaf" prot="private" static="no">
        <type>std::conditional_t&lt; IsConst, const <ref refid="classuipc_1_1geometry_1_1_attribute_collection" kindref="compound">AttributeCollection</ref>, <ref refid="classuipc_1_1geometry_1_1_attribute_collection" kindref="compound">AttributeCollection</ref> &gt;</type>
        <definition>using uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::AutoAttributeCollection = 
            std::conditional_t&lt;IsConst, const AttributeCollection, AttributeCollection&gt;</definition>
        <argsstring></argsstring>
        <name>AutoAttributeCollection</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::AutoAttributeCollection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="197" column="9" bodyfile="include/uipc/geometry/geometry.h" bodystart="197" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a420e9ff26054c6eb4f451b4743268211" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct fmt::formatter&lt; InstanceAttributesT&lt; IsConst &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>fmt::formatter&lt; InstanceAttributesT&lt; IsConst &gt; &gt;</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::formatter&lt; InstanceAttributesT&lt; IsConst &gt; &gt;</qualifiedname>
        <param>
          <type>fmt::formatter&lt; <ref refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t" kindref="compound">InstanceAttributesT</ref>&lt; IsConst &gt; &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="177" column="33" bodyfile="include/uipc/geometry/geometry.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1ac10ad3a6f0a314e1d02cc9fb387d9ec1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>_IsConst</declname>
            <defname>_IsConst</defname>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class InstanceAttributesT</definition>
        <argsstring></argsstring>
        <name>InstanceAttributesT</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::InstanceAttributesT</qualifiedname>
        <param>
          <type><ref refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t" kindref="compound">InstanceAttributesT</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="192" column="22" bodyfile="include/uipc/geometry/geometry.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1abd621cd374772a67fae8b860ddfca14c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class AttributeFriend</definition>
        <argsstring></argsstring>
        <name>AttributeFriend</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::AttributeFriend</qualifiedname>
        <param>
          <type><ref refid="classuipc_1_1geometry_1_1_attribute_friend" kindref="compound">AttributeFriend</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="195" column="22" bodyfile="include/uipc/geometry/geometry.h" bodystart="195" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a1ef7bd030ab41f578d1c494b93ebfac8" prot="private" static="no" mutable="no">
        <type>AutoAttributeCollection &amp;</type>
        <definition>AutoAttributeCollection&amp; uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::m_attributes</definition>
        <argsstring></argsstring>
        <name>m_attributes</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::m_attributes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="281" column="33" bodyfile="include/uipc/geometry/geometry.h" bodystart="281" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a4cb49ea318164199bd189cf63702815e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::InstanceAttributesT</definition>
        <argsstring>(AutoAttributeCollection &amp;attributes)</argsstring>
        <name>InstanceAttributesT</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::InstanceAttributesT</qualifiedname>
        <param>
          <type>AutoAttributeCollection &amp;</type>
          <declname>attributes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="201" column="9" bodyfile="include/uipc/geometry/geometry.h" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a727532c6484ea07ba7a68f87c971f2de" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>OtherIsConst</declname>
            <defname>OtherIsConst</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::InstanceAttributesT</definition>
        <argsstring>(const InstanceAttributesT&lt; OtherIsConst &gt; &amp;o) noexcept</argsstring>
        <name>InstanceAttributesT</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::InstanceAttributesT</qualifiedname>
        <param>
          <type>const <ref refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t" kindref="compound">InstanceAttributesT</ref>&lt; OtherIsConst &gt; &amp;</type>
          <declname>o</declname>
        </param>
    <requiresclause>(IsConst)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="207" column="9" bodyfile="include/uipc/geometry/geometry.h" bodystart="207" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a166cbe1981eefddad7c7dcad2503b062" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::InstanceAttributesT</definition>
        <argsstring>(const InstanceAttributesT &amp;o)=default</argsstring>
        <name>InstanceAttributesT</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::InstanceAttributesT</qualifiedname>
        <param>
          <type>const <ref refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t" kindref="compound">InstanceAttributesT</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="213" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1aefb3831600ab4216c59d6c38a06dbb16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::InstanceAttributesT</definition>
        <argsstring>(InstanceAttributesT &amp;&amp;o)=default</argsstring>
        <name>InstanceAttributesT</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::InstanceAttributesT</qualifiedname>
        <param>
          <type><ref refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t" kindref="compound">InstanceAttributesT</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="214" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1af5e3f87ecfbe49df23c6333684147861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t" kindref="compound">InstanceAttributesT</ref> &amp;</type>
        <definition>InstanceAttributesT &amp; uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::operator=</definition>
        <argsstring>(const InstanceAttributesT &amp;o)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t" kindref="compound">InstanceAttributesT</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="215" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1aa7269758183a4839cf9fb805c230ebbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t" kindref="compound">InstanceAttributesT</ref> &amp;</type>
        <definition>InstanceAttributesT &amp; uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::operator=</definition>
        <argsstring>(InstanceAttributesT &amp;&amp;o)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::operator=</qualifiedname>
        <param>
          <type><ref refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t" kindref="compound">InstanceAttributesT</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="216" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a63b0748597222e55302ee2f89edfeaf0" prot="public" static="no" const="no" explicit="no" inline="no" refqual="rvalue" virt="non-virtual">
        <type>void</type>
        <definition>void uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::resize</definition>
        <argsstring>(size_t size) &amp;&amp;</argsstring>
        <name>resize</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::resize</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
    <requiresclause>(!IsConst)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classuipc_1_1geometry_1_1_attribute_collection_1aa3ed4893b603f9ce9e28aeb6d2bede31" kindref="member">AttributeCollection::resize</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="221" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a28926b53e5cd2035e896dea80b7bff73" prot="public" static="no" const="no" explicit="no" inline="no" refqual="rvalue" virt="non-virtual">
        <type>void</type>
        <definition>void uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::reserve</definition>
        <argsstring>(size_t size) &amp;&amp;</argsstring>
        <name>reserve</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::reserve</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
    <requiresclause>(!IsConst)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classuipc_1_1geometry_1_1_attribute_collection_1adcdeaa3ec0b024436751528fa2a2c9a7" kindref="member">AttributeCollection::reserve</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="226" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1ab7b24bcb573e8b711ff4a1c9a0842df5" prot="public" static="no" const="no" explicit="no" inline="no" refqual="rvalue" virt="non-virtual">
        <type>void</type>
        <definition>void uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::clear</definition>
        <argsstring>() &amp;&amp;</argsstring>
        <name>clear</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::clear</qualifiedname>
    <requiresclause>(!IsConst)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classuipc_1_1geometry_1_1_attribute_collection_1a54e6a0538f4615fe428b238a2f4d5e8e" kindref="member">AttributeCollection::clear</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="231" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1ab20edf246f7eb3e18d9f93add2d3c21b" prot="public" static="no" nodiscard="yes" const="no" explicit="no" inline="no" refqual="rvalue" virt="non-virtual">
        <type>SizeT</type>
        <definition>SizeT uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::size</definition>
        <argsstring>() &amp;&amp;</argsstring>
        <name>size</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classuipc_1_1geometry_1_1_attribute_collection_1a69c0a11471d3f335f52b427773cb1216" kindref="member">AttributeCollection::size</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="236" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a2da29eb52db9228911da766f54441672" prot="public" static="no" const="no" explicit="no" inline="no" refqual="rvalue" virt="non-virtual">
        <type>void</type>
        <definition>void uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::destroy</definition>
        <argsstring>(std::string_view name) &amp;&amp;</argsstring>
        <name>destroy</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::destroy</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
    <requiresclause>(!IsConst)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classuipc_1_1geometry_1_1_attribute_collection_1aa8e469b36fcc1bf03ca58b5310d94d75" kindref="member">AttributeCollection::destroy</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="241" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a57e9b316d82cadef265b42dba7b1808f" prot="public" static="no" nodiscard="yes" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::find</definition>
        <argsstring>(std::string_view name) &amp;&amp;</argsstring>
        <name>find</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::find</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Find an attribute by type and name, if the attribute does not exist, return nullptr. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="248" column="15" bodyfile="include/uipc/geometry/geometry.h" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a7214a2b8c23f825af43e6e238f169dc3" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::create</definition>
        <argsstring>(std::string_view name, const T &amp;init_value={}) &amp;&amp;</argsstring>
        <name>create</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::create</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>init_value</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Create an attribute with the given name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="257" column="18" bodyfile="include/uipc/geometry/geometry.h" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1ab4c0a75130eef3bd78ddc251075c88fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::share</definition>
        <argsstring>(std::string_view name, const AttributeSlot&lt; T &gt; &amp;slot)</argsstring>
        <name>share</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::share</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classuipc_1_1geometry_1_1_attribute_slot" kindref="compound">AttributeSlot</ref>&lt; T &gt; &amp;</type>
          <declname>slot</declname>
        </param>
    <requiresclause>(!IsConst)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="263" column="18" bodyfile="include/uipc/geometry/geometry.h" bodystart="263" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1ae74b2e36e0d8bdafde745023c97b14e2" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type>void</type>
        <definition>void uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::copy_from</definition>
        <argsstring>(InstanceAttributesT&lt; true &gt; other, const AttributeCopy &amp;copy={}, span&lt; const string &gt; include_names={}, span&lt; const string &gt; exclude_names={}) &amp;&amp;</argsstring>
        <name>copy_from</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::copy_from</qualifiedname>
        <param>
          <type><ref refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t" kindref="compound">InstanceAttributesT</ref>&lt; true &gt;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classuipc_1_1geometry_1_1_attribute_copy" kindref="compound">AttributeCopy</ref> &amp;</type>
          <declname>copy</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>span&lt; const string &gt;</type>
          <declname>include_names</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>span&lt; const string &gt;</type>
          <declname>exclude_names</declname>
          <defval>{}</defval>
        </param>
    <requiresclause>(!IsConst)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="269" column="14" bodyfile="include/uipc/geometry/geometry.h" bodystart="269" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1ad7cf3e5bfc60b252238a9c853faeaaa1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Json</type>
        <definition>Json uipc::geometry::Geometry::InstanceAttributesT&lt; IsConst &gt;::to_json</definition>
        <argsstring>() const</argsstring>
        <name>to_json</name>
        <qualifiedname>uipc::geometry::Geometry::InstanceAttributesT::to_json</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="278" column="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A wrapper class for the instance attributes of a geometries. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/uipc/geometry/geometry.h" line="187" column="5" bodyfile="include/uipc/geometry/geometry.h" bodystart="188" bodyend="282"/>
    <listofallmembers>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1abd621cd374772a67fae8b860ddfca14c" prot="private" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>AttributeFriend</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a1f2e4c824fc59679810366504b917eaf" prot="private" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>AutoAttributeCollection</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1ab7b24bcb573e8b711ff4a1c9a0842df5" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>clear</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1ae74b2e36e0d8bdafde745023c97b14e2" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>copy_from</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a7214a2b8c23f825af43e6e238f169dc3" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>create</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a2da29eb52db9228911da766f54441672" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>destroy</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a57e9b316d82cadef265b42dba7b1808f" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>find</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a420e9ff26054c6eb4f451b4743268211" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>fmt::formatter&lt; InstanceAttributesT&lt; IsConst &gt; &gt;</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1ac10ad3a6f0a314e1d02cc9fb387d9ec1" prot="private" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>InstanceAttributesT</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a4cb49ea318164199bd189cf63702815e" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>InstanceAttributesT</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a727532c6484ea07ba7a68f87c971f2de" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>InstanceAttributesT</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a166cbe1981eefddad7c7dcad2503b062" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>InstanceAttributesT</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1aefb3831600ab4216c59d6c38a06dbb16" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>InstanceAttributesT</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a1ef7bd030ab41f578d1c494b93ebfac8" prot="private" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>m_attributes</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1af5e3f87ecfbe49df23c6333684147861" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>operator=</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1aa7269758183a4839cf9fb805c230ebbf" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>operator=</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a28926b53e5cd2035e896dea80b7bff73" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>reserve</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1a63b0748597222e55302ee2f89edfeaf0" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>resize</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1ab4c0a75130eef3bd78ddc251075c88fe" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>share</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1ab20edf246f7eb3e18d9f93add2d3c21b" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>size</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_instance_attributes_t_1ad7cf3e5bfc60b252238a9c853faeaaa1" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::InstanceAttributesT</scope><name>to_json</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
