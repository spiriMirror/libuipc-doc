<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t" kind="class" language="C++" prot="public">
    <compoundname>uipc::core::Scene::ConfigAttributesT</compoundname>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>IsConst</declname>
        <defname>IsConst</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a390dd2491e9487a011ee2919437013f7" prot="private" static="no">
        <type><ref refid="classuipc_1_1geometry_1_1_attribute_collection" kindref="compound">geometry::AttributeCollection</ref></type>
        <definition>using uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::AttributeCollection =  geometry::AttributeCollection</definition>
        <argsstring></argsstring>
        <name>AttributeCollection</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::AttributeCollection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="49" column="9" bodyfile="include/uipc/core/scene.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1aed26f18ebbcccc358d8c23c92c8529c1" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classuipc_1_1geometry_1_1_attribute_slot" kindref="compound">geometry::AttributeSlot</ref>&lt; T &gt;</type>
        <definition>using uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::AttributeSlot =  geometry::AttributeSlot&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>AttributeSlot</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::AttributeSlot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="51" column="9" bodyfile="include/uipc/core/scene.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1acff5397586f30c9f6cd458c6ab787b04" prot="private" static="no">
        <type><ref refid="classuipc_1_1geometry_1_1_attribute_copy" kindref="compound">geometry::AttributeCopy</ref></type>
        <definition>using uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::AttributeCopy =  geometry::AttributeCopy</definition>
        <argsstring></argsstring>
        <name>AttributeCopy</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::AttributeCopy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="52" column="9" bodyfile="include/uipc/core/scene.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1ab070cfc761b40ed7bcda2b566bd0ea3d" prot="private" static="no">
        <type>std::conditional_t&lt; IsConst, const <ref refid="classuipc_1_1geometry_1_1_attribute_collection" kindref="compound">AttributeCollection</ref>, <ref refid="classuipc_1_1geometry_1_1_attribute_collection" kindref="compound">AttributeCollection</ref> &gt;</type>
        <definition>using uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::AutoAttributeCollection = 
            std::conditional_t&lt;IsConst, const AttributeCollection, AttributeCollection&gt;</definition>
        <argsstring></argsstring>
        <name>AutoAttributeCollection</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::AutoAttributeCollection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="54" column="9" bodyfile="include/uipc/core/scene.h" bodystart="54" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a68765ff6cd753c87ba96246e5dcb7aeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct fmt::formatter&lt; ConfigAttributesT&lt; IsConst &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>fmt::formatter&lt; ConfigAttributesT&lt; IsConst &gt; &gt;</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::formatter&lt; ConfigAttributesT&lt; IsConst &gt; &gt;</qualifiedname>
        <param>
          <type>fmt::formatter&lt; <ref refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t" kindref="compound">ConfigAttributesT</ref>&lt; IsConst &gt; &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="228" column="7" bodyfile="include/uipc/core/scene.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a8a666c6d62ba7f64de15f32bb591f914" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>_IsConst</declname>
            <defname>_IsConst</defname>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class ConfigAttributesT</definition>
        <argsstring></argsstring>
        <name>ConfigAttributesT</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::ConfigAttributesT</qualifiedname>
        <param>
          <type><ref refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t" kindref="compound">ConfigAttributesT</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="58" column="22" bodyfile="include/uipc/core/scene.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a68b5869978e2f2f5fdaa8cbd1f2b5251" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class geometry::AttributeFriend</definition>
        <argsstring></argsstring>
        <name>geometry::AttributeFriend</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::AttributeFriend</qualifiedname>
        <param>
          <type><ref refid="classuipc_1_1geometry_1_1_attribute_friend" kindref="compound">geometry::AttributeFriend</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="61" column="22" bodyfile="include/uipc/core/scene.h" bodystart="61" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1abaa124abc203fdbd837e09db583f0bd8" prot="private" static="no" mutable="no">
        <type>AutoAttributeCollection &amp;</type>
        <definition>AutoAttributeCollection&amp; uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::m_attributes</definition>
        <argsstring></argsstring>
        <name>m_attributes</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::m_attributes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="127" column="33" bodyfile="include/uipc/core/scene.h" bodystart="127" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1ac796a34e52239bf7c0fddc5276260d2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::ConfigAttributesT</definition>
        <argsstring>(AutoAttributeCollection &amp;attributes)</argsstring>
        <name>ConfigAttributesT</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::ConfigAttributesT</qualifiedname>
        <param>
          <type>AutoAttributeCollection &amp;</type>
          <declname>attributes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="64" column="9" bodyfile="include/uipc/core/scene.h" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1ae011f8fbc16b8e093031be3f2ed0102b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>OtherIsConst</declname>
            <defname>OtherIsConst</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::ConfigAttributesT</definition>
        <argsstring>(const ConfigAttributesT&lt; OtherIsConst &gt; &amp;o) noexcept</argsstring>
        <name>ConfigAttributesT</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::ConfigAttributesT</qualifiedname>
        <param>
          <type>const <ref refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t" kindref="compound">ConfigAttributesT</ref>&lt; OtherIsConst &gt; &amp;</type>
          <declname>o</declname>
        </param>
    <requiresclause>(IsConst)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="70" column="9" bodyfile="include/uipc/core/scene.h" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a581d169a92bb6b6411a3a013e85703ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::ConfigAttributesT</definition>
        <argsstring>(const ConfigAttributesT &amp;o)=default</argsstring>
        <name>ConfigAttributesT</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::ConfigAttributesT</qualifiedname>
        <param>
          <type>const <ref refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t" kindref="compound">ConfigAttributesT</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="76" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1aaee122e6e177a0d9d5cddab34f1bce19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::ConfigAttributesT</definition>
        <argsstring>(ConfigAttributesT &amp;&amp;o)=default</argsstring>
        <name>ConfigAttributesT</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::ConfigAttributesT</qualifiedname>
        <param>
          <type><ref refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t" kindref="compound">ConfigAttributesT</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="77" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a50bea8a47b96fc869e866336fb49b64a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t" kindref="compound">ConfigAttributesT</ref> &amp;</type>
        <definition>ConfigAttributesT &amp; uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::operator=</definition>
        <argsstring>(const ConfigAttributesT &amp;o)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t" kindref="compound">ConfigAttributesT</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="78" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1ab0d8826905db7300c48073604127a246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t" kindref="compound">ConfigAttributesT</ref> &amp;</type>
        <definition>ConfigAttributesT &amp; uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::operator=</definition>
        <argsstring>(ConfigAttributesT &amp;&amp;o)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::operator=</qualifiedname>
        <param>
          <type><ref refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t" kindref="compound">ConfigAttributesT</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="79" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a5ea606b825a58a31374d1aaa4af5c0de" prot="public" static="no" nodiscard="yes" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::find</definition>
        <argsstring>(std::string_view name) &amp;&amp;</argsstring>
        <name>find</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::find</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Find an attribute by type and name, if the attribute does not exist, return nullptr. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="85" column="15" bodyfile="include/uipc/core/scene.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a056df4b8222df645f2c6f42764311544" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::create</definition>
        <argsstring>(std::string_view name, const T &amp;init_value={}) &amp;&amp;</argsstring>
        <name>create</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::create</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>init_value</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Create an attribute with the given name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="94" column="18" bodyfile="include/uipc/core/scene.h" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a8a0021b8d6ca9bcce012ec10ced20ce9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::share</definition>
        <argsstring>(std::string_view name, const AttributeSlot&lt; T &gt; &amp;slot)</argsstring>
        <name>share</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::share</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classuipc_1_1geometry_1_1_attribute_slot" kindref="compound">AttributeSlot</ref>&lt; T &gt; &amp;</type>
          <declname>slot</declname>
        </param>
    <requiresclause>(!IsConst)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="100" column="18" bodyfile="include/uipc/core/scene.h" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a81d95da9b7a233e1b32190eb8c88900d" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type>void</type>
        <definition>void uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::destroy</definition>
        <argsstring>(std::string_view name) &amp;&amp;</argsstring>
        <name>destroy</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::destroy</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
    <requiresclause>(!IsConst)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classuipc_1_1geometry_1_1_attribute_collection_1aa8e469b36fcc1bf03ca58b5310d94d75" kindref="member">AttributeCollection::destroy</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="109" column="14" bodyfile="include/uipc/core/scene.h" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a9214d52bff05cab67f598c26feb78bfa" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type>void</type>
        <definition>void uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::copy_from</definition>
        <argsstring>(ConfigAttributesT&lt; true &gt; other, const AttributeCopy &amp;copy={}, span&lt; const string &gt; include_names={}, span&lt; const string &gt; exclude_names={}) &amp;&amp;</argsstring>
        <name>copy_from</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::copy_from</qualifiedname>
        <param>
          <type><ref refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t" kindref="compound">ConfigAttributesT</ref>&lt; true &gt;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classuipc_1_1geometry_1_1_attribute_copy" kindref="compound">AttributeCopy</ref> &amp;</type>
          <declname>copy</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>span&lt; const string &gt;</type>
          <declname>include_names</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>span&lt; const string &gt;</type>
          <declname>exclude_names</declname>
          <defval>{}</defval>
        </param>
    <requiresclause>(!IsConst)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="115" column="14" bodyfile="include/uipc/core/scene.h" bodystart="115" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a2cc1c9d65b972a57e07d54d3959aee28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Json</type>
        <definition>Json uipc::core::Scene::ConfigAttributesT&lt; IsConst &gt;::to_json</definition>
        <argsstring>() const</argsstring>
        <name>to_json</name>
        <qualifiedname>uipc::core::Scene::ConfigAttributesT::to_json</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/core/scene.h" line="124" column="14" bodyfile="include/uipc/core/scene.h" bodystart="124" bodyend="124"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/uipc/core/scene.h" line="46" column="5" bodyfile="include/uipc/core/scene.h" bodystart="47" bodyend="128"/>
    <listofallmembers>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a390dd2491e9487a011ee2919437013f7" prot="private" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>AttributeCollection</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1acff5397586f30c9f6cd458c6ab787b04" prot="private" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>AttributeCopy</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1aed26f18ebbcccc358d8c23c92c8529c1" prot="private" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>AttributeSlot</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1ab070cfc761b40ed7bcda2b566bd0ea3d" prot="private" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>AutoAttributeCollection</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a8a666c6d62ba7f64de15f32bb591f914" prot="private" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>ConfigAttributesT</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1ac796a34e52239bf7c0fddc5276260d2a" prot="public" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>ConfigAttributesT</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1ae011f8fbc16b8e093031be3f2ed0102b" prot="public" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>ConfigAttributesT</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a581d169a92bb6b6411a3a013e85703ff" prot="public" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>ConfigAttributesT</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1aaee122e6e177a0d9d5cddab34f1bce19" prot="public" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>ConfigAttributesT</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a9214d52bff05cab67f598c26feb78bfa" prot="public" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>copy_from</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a056df4b8222df645f2c6f42764311544" prot="public" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>create</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a81d95da9b7a233e1b32190eb8c88900d" prot="public" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>destroy</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a5ea606b825a58a31374d1aaa4af5c0de" prot="public" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>find</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a68765ff6cd753c87ba96246e5dcb7aeb" prot="public" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>fmt::formatter&lt; ConfigAttributesT&lt; IsConst &gt; &gt;</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a68b5869978e2f2f5fdaa8cbd1f2b5251" prot="public" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>geometry::AttributeFriend</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1abaa124abc203fdbd837e09db583f0bd8" prot="private" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>m_attributes</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a50bea8a47b96fc869e866336fb49b64a" prot="public" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>operator=</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1ab0d8826905db7300c48073604127a246" prot="public" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>operator=</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a8a0021b8d6ca9bcce012ec10ced20ce9" prot="public" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>share</name></member>
      <member refid="classuipc_1_1core_1_1_scene_1_1_config_attributes_t_1a2cc1c9d65b972a57e07d54d3959aee28" prot="public" virt="non-virtual"><scope>uipc::core::Scene::ConfigAttributesT</scope><name>to_json</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
