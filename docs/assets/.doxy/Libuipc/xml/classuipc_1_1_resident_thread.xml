<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="classuipc_1_1_resident_thread" kind="class" language="C++" prot="public">
    <compoundname>uipc::ResidentThread</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classuipc_1_1_resident_thread_1ae7e3c8c391f2811cc7a5bf4bc07adbb3" prot="private" static="no" mutable="no">
        <type>S&lt; Impl &gt;</type>
        <definition>S&lt;Impl&gt; uipc::ResidentThread::m_impl</definition>
        <argsstring></argsstring>
        <name>m_impl</name>
        <qualifiedname>uipc::ResidentThread::m_impl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/common/resident_thread.h" line="22" column="7" bodyfile="include/uipc/common/resident_thread.h" bodystart="22" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classuipc_1_1_resident_thread_1a6ca483ffa5c6cbeae79d5e28add5680d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>uipc::ResidentThread::ResidentThread</definition>
        <argsstring>()</argsstring>
        <name>ResidentThread</name>
        <qualifiedname>uipc::ResidentThread::ResidentThread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/common/resident_thread.h" line="10" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1_resident_thread_1aa9a23c18a9fa40b65a9c2638f1c1a3b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SizeT</type>
        <definition>SizeT uipc::ResidentThread::hash</definition>
        <argsstring>() const</argsstring>
        <name>hash</name>
        <qualifiedname>uipc::ResidentThread::hash</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/common/resident_thread.h" line="12" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1_resident_thread_1a522f9da878e9cda18d24c030df693c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>uipc::ResidentThread::~ResidentThread</definition>
        <argsstring>()</argsstring>
        <name>~ResidentThread</name>
        <qualifiedname>uipc::ResidentThread::~ResidentThread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/common/resident_thread.h" line="14" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1_resident_thread_1a7aed4346f437f73117bb1bb99b9a2589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool uipc::ResidentThread::post</definition>
        <argsstring>(std::function&lt; void()&gt; task)</argsstring>
        <name>post</name>
        <qualifiedname>uipc::ResidentThread::post</qualifiedname>
        <param>
          <type>std::function&lt; void()&gt;</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/common/resident_thread.h" line="16" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1_resident_thread_1a6434dc87478d939314167ceee9580345" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool uipc::ResidentThread::is_ready</definition>
        <argsstring>() const</argsstring>
        <name>is_ready</name>
        <qualifiedname>uipc::ResidentThread::is_ready</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/common/resident_thread.h" line="17" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/uipc/common/resident_thread.h" line="7" column="1" bodyfile="include/uipc/common/resident_thread.h" bodystart="8" bodyend="23"/>
    <listofallmembers>
      <member refid="classuipc_1_1_resident_thread_1aa9a23c18a9fa40b65a9c2638f1c1a3b4" prot="public" virt="non-virtual"><scope>uipc::ResidentThread</scope><name>hash</name></member>
      <member refid="classuipc_1_1_resident_thread_1a6434dc87478d939314167ceee9580345" prot="public" virt="non-virtual"><scope>uipc::ResidentThread</scope><name>is_ready</name></member>
      <member refid="classuipc_1_1_resident_thread_1ae7e3c8c391f2811cc7a5bf4bc07adbb3" prot="private" virt="non-virtual"><scope>uipc::ResidentThread</scope><name>m_impl</name></member>
      <member refid="classuipc_1_1_resident_thread_1a7aed4346f437f73117bb1bb99b9a2589" prot="public" virt="non-virtual"><scope>uipc::ResidentThread</scope><name>post</name></member>
      <member refid="classuipc_1_1_resident_thread_1a6ca483ffa5c6cbeae79d5e28add5680d" prot="public" virt="non-virtual"><scope>uipc::ResidentThread</scope><name>ResidentThread</name></member>
      <member refid="classuipc_1_1_resident_thread_1a522f9da878e9cda18d24c030df693c86" prot="public" virt="non-virtual"><scope>uipc::ResidentThread</scope><name>~ResidentThread</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
