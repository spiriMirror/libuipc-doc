<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="type__traits_8h" kind="file" language="C++">
    <compoundname>type_traits.h</compoundname>
    <includes local="no">type_traits</includes>
    <includes local="no">Eigen/Core</includes>
    <includedby refid="object_8h" local="no">include/uipc/core/object.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/uipc/common/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Eigen/Core</label>
      </node>
      <node id="2">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>include/uipc/backend/visitors/scene_visitor.h</label>
        <link refid="scene__visitor_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/uipc/backend/visitors/world_visitor.h</label>
        <link refid="world__visitor_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/uipc/common/type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>include/uipc/core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>include/uipc/core/animation.h</label>
        <link refid="animation_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>include/uipc/core/animator.h</label>
        <link refid="animator_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/uipc/core/engine.h</label>
        <link refid="engine_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>include/uipc/core/i_engine.h</label>
        <link refid="i__engine_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/uipc/core/object.h</label>
        <link refid="object_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>include/uipc/core/object_collection.h</label>
        <link refid="object__collection_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>include/uipc/core/scene.h</label>
        <link refid="scene_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>include/uipc/core/scene_factory.h</label>
        <link refid="scene__factory_8h_source"/>
      </node>
      <node id="14">
        <label>include/uipc/core/world.h</label>
        <link refid="world_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>include/uipc/diff_sim/adjoint_method_feature.h</label>
        <link refid="adjoint__method__feature_8h_source"/>
      </node>
      <node id="16">
        <label>include/uipc/io.h</label>
        <link refid="io_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>include/uipc/io/gltf_io.h</label>
        <link refid="gltf__io_8h_source"/>
      </node>
      <node id="15">
        <label>include/uipc/io/scene_io.h</label>
        <link refid="scene__io_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/uipc/uipc.h</label>
        <link refid="uipc_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structuipc_1_1propagate__const" prot="public">uipc::propagate_const</innerclass>
    <innerclass refid="structuipc_1_1signature_3_01_r_07_args_8_8_8_08_4" prot="public">uipc::signature&lt; R(Args...)&gt;</innerclass>
    <innerclass refid="structuipc_1_1signature_3_01_r_07_5_08_07_args_8_8_8_08_4" prot="public">uipc::signature&lt; R(*)(Args...)&gt;</innerclass>
    <innerclass refid="structuipc_1_1signature_3_01_r_07_6_08_07_args_8_8_8_08_4" prot="public">uipc::signature&lt; R(&amp;)(Args...)&gt;</innerclass>
    <innerclass refid="structuipc_1_1signature_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_4" prot="public">uipc::signature&lt; R(C::*)(Args...)&gt;</innerclass>
    <innerclass refid="structuipc_1_1signature_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01const_01_4" prot="public">uipc::signature&lt; R(C::*)(Args...) const &gt;</innerclass>
    <innerclass refid="structuipc_1_1signature_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01volatile_01_4" prot="public">uipc::signature&lt; R(C::*)(Args...) volatile &gt;</innerclass>
    <innerclass refid="structuipc_1_1signature_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01const_01volatile_01_4" prot="public">uipc::signature&lt; R(C::*)(Args...) const volatile &gt;</innerclass>
    <innerclass refid="structuipc_1_1signature_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01_6_6_01_4" prot="public">uipc::signature&lt; R(C::*)(Args...) &amp;&amp; &gt;</innerclass>
    <innerclass refid="classuipc_1_1is__matrix" prot="public">uipc::is_matrix</innerclass>
    <innerclass refid="classuipc_1_1is__matrix_3_01_eigen_1_1_matrix_3_01_scalar_00_01_rows_00_01_cols_00_01_options_00209f23989f4c2eaf53edf139526fd2cf" prot="public">uipc::is_matrix&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Options, MaxRows, MaxCols &gt; &gt;</innerclass>
    <innernamespace refid="namespaceuipc">uipc</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">uipc</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstT&gt;</highlight></codeline>
<codeline lineno="8" refid="structuipc_1_1propagate__const" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuipc_1_1propagate__const" kindref="compound">propagate_const</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">DstT_<sp/>=<sp/>std::remove_cv_t&lt;DstT&gt;;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/>std::conditional_t&lt;std::is_const_v&lt;T&gt;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DstT_,<sp/>DstT_&gt;;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">};</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DstT&gt;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">propagate_const_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>propagate_const&lt;T,<sp/>DstT&gt;::type;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sig&gt;</highlight></codeline>
<codeline lineno="22" refid="structuipc_1_1signature" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuipc_1_1signature" kindref="compound">signature</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="25" refid="structuipc_1_1signature_3_01_r_07_args_8_8_8_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuipc_1_1signature" kindref="compound">signature</ref>&lt;R(Args...)&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">type<sp/>=<sp/>std::tuple&lt;R,<sp/>Args...&gt;;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="31" refid="structuipc_1_1signature_3_01_r_07_5_08_07_args_8_8_8_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuipc_1_1signature" kindref="compound">signature</ref>&lt;R<sp/>(*)(Args...)&gt;<sp/>:<sp/><ref refid="structuipc_1_1signature" kindref="compound">signature</ref>&lt;R(Args...)&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="36" refid="structuipc_1_1signature_3_01_r_07_6_08_07_args_8_8_8_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuipc_1_1signature" kindref="compound">signature</ref>&lt;R<sp/>(&amp;)(Args...)&gt;<sp/>:<sp/><ref refid="structuipc_1_1signature" kindref="compound">signature</ref>&lt;R(Args...)&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="41" refid="structuipc_1_1signature_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuipc_1_1signature" kindref="compound">signature</ref>&lt;R<sp/>(C::*)(Args...)&gt;<sp/>:<sp/><ref refid="structuipc_1_1signature" kindref="compound">signature</ref>&lt;R(Args...)&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="46" refid="structuipc_1_1signature_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01const_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuipc_1_1signature" kindref="compound">signature</ref>&lt;R<sp/>(C::*)(Args...)<sp/>const&gt;<sp/>:<sp/><ref refid="structuipc_1_1signature" kindref="compound">signature</ref>&lt;R(Args...)&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="51" refid="structuipc_1_1signature_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01volatile_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuipc_1_1signature" kindref="compound">signature</ref>&lt;R<sp/>(C::*)(Args...)<sp/>volatile&gt;<sp/>:<sp/><ref refid="structuipc_1_1signature" kindref="compound">signature</ref>&lt;R(Args...)&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="56" refid="structuipc_1_1signature_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01const_01volatile_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuipc_1_1signature" kindref="compound">signature</ref>&lt;R<sp/>(C::*)(Args...)<sp/>const<sp/>volatile&gt;<sp/>:<sp/><ref refid="structuipc_1_1signature" kindref="compound">signature</ref>&lt;R(Args...)&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="61" refid="structuipc_1_1signature_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01_6_6_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuipc_1_1signature" kindref="compound">signature</ref>&lt;R<sp/>(C::*)(Args...)<sp/>&amp;&amp;&gt;<sp/>:<sp/><ref refid="structuipc_1_1signature" kindref="compound">signature</ref>&lt;R(Args...)&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sig&gt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">signature_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structuipc_1_1signature" kindref="compound">signature&lt;Sig&gt;::type</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatrixT&gt;</highlight></codeline>
<codeline lineno="70" refid="classuipc_1_1is__matrix" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classuipc_1_1is__matrix" kindref="compound">is_matrix</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::false_type</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatrixT&gt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_matrix_v<sp/>=<sp/><ref refid="classuipc_1_1is__matrix" kindref="compound">is_matrix&lt;MatrixT&gt;::value</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scalar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Rows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Cols,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Options,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxRows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxCols&gt;</highlight></codeline>
<codeline lineno="78" refid="classuipc_1_1is__matrix_3_01_eigen_1_1_matrix_3_01_scalar_00_01_rows_00_01_cols_00_01_options_00209f23989f4c2eaf53edf139526fd2cf" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classuipc_1_1is__matrix" kindref="compound">is_matrix</ref>&lt;Eigen::Matrix&lt;Scalar,<sp/>Rows,<sp/>Cols,<sp/>Options,<sp/>MaxRows,<sp/>MaxCols&gt;&gt;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::true_type</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal">};</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>uipc</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/uipc/common/type_traits.h"/>
  </compounddef>
</doxygen>
