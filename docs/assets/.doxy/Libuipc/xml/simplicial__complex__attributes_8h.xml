<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="simplicial__complex__attributes_8h" kind="file" language="C++">
    <compoundname>simplicial_complex_attributes.h</compoundname>
    <includes refid="attribute__slot_8h" local="no">uipc/geometry/attribute_slot.h</includes>
    <includes refid="attribute__collection_8h" local="no">uipc/geometry/attribute_collection.h</includes>
    <includes refid="json_8h" local="no">uipc/common/json.h</includes>
    <includes refid="attribute__friend_8h" local="no">uipc/geometry/attribute_friend.h</includes>
    <includedby refid="abstract__simplicial__complex_8h" local="no">include/uipc/geometry/abstract_simplicial_complex.h</includedby>
    <includedby refid="simplicial__complex_8h" local="no">include/uipc/geometry/simplicial_complex.h</includedby>
    <incdepgraph>
      <node id="10">
        <label>uipc/backend/buffer_view.h</label>
        <link refid="buffer__view_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>uipc/backend/type_define.h</label>
        <link refid="backend_2type__define_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>uipc/common/allocator.h</label>
        <link refid="allocator_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>uipc/common/buffer_info.h</label>
        <link refid="buffer__info_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>uipc/common/dllexport.h</label>
        <link refid="dllexport_8h_source"/>
      </node>
      <node id="27">
        <label>uipc/common/exception.h</label>
        <link refid="exception_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>uipc/common/json.h</label>
        <link refid="json_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>uipc/common/smart_pointer.h</label>
        <link refid="smart__pointer_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>uipc/common/span.h</label>
        <link refid="span_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>uipc/common/string.h</label>
        <link refid="string_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>uipc/common/type_define.h</label>
        <link refid="common_2type__define_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>uipc/common/unordered_map.h</label>
        <link refid="unordered__map_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>uipc/common/vector.h</label>
        <link refid="vector_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>uipc/geometry/attribute.h</label>
        <link refid="attribute_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>uipc/geometry/attribute_collection.h</label>
        <link refid="attribute__collection_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>uipc/geometry/attribute_copy.h</label>
        <link refid="attribute__copy_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>uipc/geometry/attribute_friend.h</label>
        <link refid="attribute__friend_8h_source"/>
      </node>
      <node id="2">
        <label>uipc/geometry/attribute_slot.h</label>
        <link refid="attribute__slot_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/uipc/geometry/simplicial_complex_attributes.h</label>
        <link refid="simplicial__complex__attributes_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Eigen/Core</label>
      </node>
      <node id="13">
        <label>cinttypes</label>
      </node>
      <node id="25">
        <label>details/attribute.inl</label>
      </node>
      <node id="35">
        <label>details/attribute_collection.inl</label>
      </node>
      <node id="23">
        <label>details/attribute_copy.inl</label>
      </node>
      <node id="31">
        <label>details/attribute_slot.inl</label>
      </node>
      <node id="7">
        <label>details/smart_pointer.inl</label>
      </node>
      <node id="30">
        <label>exception</label>
      </node>
      <node id="26">
        <label>map</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="5">
        <label>memory_resource</label>
      </node>
      <node id="17">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="19">
        <label>span</label>
      </node>
      <node id="29">
        <label>string</label>
      </node>
      <node id="9">
        <label>string_view</label>
      </node>
      <node id="34">
        <label>unordered_map</label>
      </node>
      <node id="21">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>include/uipc/constitution/affine_body_constitution.h</label>
        <link refid="affine__body__constitution_8h_source"/>
      </node>
      <node id="9">
        <label>include/uipc/constitution/arap.h</label>
        <link refid="arap_8h_source"/>
      </node>
      <node id="5">
        <label>include/uipc/constitution/constraint.h</label>
        <link refid="constraint_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>include/uipc/constitution/discrete_shell_bending.h</label>
        <link refid="discrete__shell__bending_8h_source"/>
      </node>
      <node id="10">
        <label>include/uipc/constitution/empty.h</label>
        <link refid="empty_8h_source"/>
      </node>
      <node id="8">
        <label>include/uipc/constitution/finite_element_constitution.h</label>
        <link refid="finite__element__constitution_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>include/uipc/constitution/finite_element_extra_constitution.h</label>
        <link refid="finite__element__extra__constitution_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>include/uipc/constitution/hookean_spring.h</label>
        <link refid="hookean__spring_8h_source"/>
      </node>
      <node id="17">
        <label>include/uipc/constitution/kirchhoff_rod_bending.h</label>
        <link refid="kirchhoff__rod__bending_8h_source"/>
      </node>
      <node id="12">
        <label>include/uipc/constitution/neo_hookean_shell.h</label>
        <link refid="neo__hookean__shell_8h_source"/>
      </node>
      <node id="13">
        <label>include/uipc/constitution/particle.h</label>
        <link refid="particle_8h_source"/>
      </node>
      <node id="6">
        <label>include/uipc/constitution/soft_position_constraint.h</label>
        <link refid="soft__position__constraint_8h_source"/>
      </node>
      <node id="7">
        <label>include/uipc/constitution/soft_transform_constraint.h</label>
        <link refid="soft__transform__constraint_8h_source"/>
      </node>
      <node id="14">
        <label>include/uipc/constitution/stable_neo_hookean.h</label>
        <link refid="stable__neo__hookean_8h_source"/>
      </node>
      <node id="18">
        <label>include/uipc/core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>include/uipc/geometry.h</label>
        <link refid="geometry_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/uipc/geometry/abstract_simplicial_complex.h</label>
        <link refid="abstract__simplicial__complex_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/uipc/geometry/simplicial_complex.h</label>
        <link refid="simplicial__complex_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/uipc/geometry/simplicial_complex_attributes.h</label>
        <link refid="simplicial__complex__attributes_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>include/uipc/geometry/simplicial_complex_slot.h</label>
        <link refid="simplicial__complex__slot_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>include/uipc/geometry/utils.h</label>
        <link refid="utils_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>include/uipc/geometry/utils/apply_region.h</label>
        <link refid="apply__region_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>include/uipc/geometry/utils/apply_transform.h</label>
        <link refid="apply__transform_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>include/uipc/geometry/utils/closure.h</label>
        <link refid="closure_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>include/uipc/geometry/utils/compute_vertex_mass.h</label>
        <link refid="compute__vertex__mass_8h_source"/>
      </node>
      <node id="27">
        <label>include/uipc/geometry/utils/extract_surface.h</label>
        <link refid="extract__surface_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>include/uipc/geometry/utils/factory.h</label>
        <link refid="factory_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>include/uipc/geometry/utils/flip_inward_triangles.h</label>
        <link refid="flip__inward__triangles_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>include/uipc/geometry/utils/label_connected_vertices.h</label>
        <link refid="label__connected__vertices_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>include/uipc/geometry/utils/label_region.h</label>
        <link refid="label__region_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>include/uipc/geometry/utils/label_surface.h</label>
        <link refid="label__surface_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>include/uipc/geometry/utils/label_triangle_orient.h</label>
        <link refid="label__triangle__orient_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>include/uipc/geometry/utils/merge.h</label>
        <link refid="merge_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>include/uipc/geometry/utils/mesh_partition.h</label>
        <link refid="mesh__partition_8h_source"/>
      </node>
      <node id="36">
        <label>include/uipc/geometry/utils/tetrahedralize.h</label>
        <link refid="tetrahedralize_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>include/uipc/io.h</label>
        <link refid="io_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>include/uipc/io/gltf_io.h</label>
        <link refid="gltf__io_8h_source"/>
      </node>
      <node id="37">
        <label>include/uipc/io/scene_io.h</label>
        <link refid="scene__io_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>include/uipc/io/simplicial_complex_io.h</label>
        <link refid="simplicial__complex__io_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>include/uipc/io/spread_sheet_io.h</label>
        <link refid="spread__sheet__io_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>include/uipc/uipc.h</label>
        <link refid="uipc_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes" prot="public">uipc::geometry::SimplicialComplexAttributes</innerclass>
    <innerclass refid="structfmt_1_1formatter_3_01uipc_1_1geometry_1_1_simplicial_complex_attributes_3_01_is_const_00_01_n_01_4_01_4" prot="private">fmt::formatter&lt; uipc::geometry::SimplicialComplexAttributes&lt; IsConst, N &gt; &gt;</innerclass>
    <innernamespace refid="namespaceuipc">uipc</innernamespace>
    <innernamespace refid="namespaceuipc_1_1geometry">uipc::geometry</innernamespace>
    <innernamespace refid="namespacefmt">fmt</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uipc/geometry/attribute_slot.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uipc/geometry/attribute_collection.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uipc/common/json.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uipc/geometry/attribute_friend.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">uipc::geometry</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsConst,<sp/>IndexT<sp/>N&gt;</highlight></codeline>
<codeline lineno="9" refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes" kindref="compound">SimplicialComplexAttributes</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">fmt::formatter&lt;<ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes" kindref="compound">SimplicialComplexAttributes</ref>&lt;IsConst,<sp/>N&gt;&gt;;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classuipc_1_1geometry_1_1_attribute_friend" kindref="compound">AttributeFriend</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>OtherIsConst,<sp/>IndexT<sp/>OtherN&gt;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes" kindref="compound">SimplicialComplexAttributes</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsScalar<sp/>=<sp/>(N<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">AutoAttributeCollection<sp/>=</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::conditional_t&lt;IsConst,<sp/>const<sp/>AttributeCollection,<sp/>AttributeCollection&gt;;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TopoValueT<sp/>=<sp/>std::conditional_t&lt;IsScalar,<sp/>IndexT,<sp/>Vector&lt;IndexT,<sp/>N<sp/>+<sp/>1&gt;&gt;;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes" kindref="compound">SimplicialComplexAttributes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes" kindref="compound">SimplicialComplexAttributes</ref>&amp;<sp/>o)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes" kindref="compound">SimplicialComplexAttributes</ref>(<ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes" kindref="compound">SimplicialComplexAttributes</ref>&amp;&amp;<sp/>o)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes" kindref="compound">SimplicialComplexAttributes</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes" kindref="compound">SimplicialComplexAttributes</ref>&amp;<sp/>o)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes" kindref="compound">SimplicialComplexAttributes</ref>&amp;<sp/>operator=(<ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes" kindref="compound">SimplicialComplexAttributes</ref>&amp;&amp;<sp/>o)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>OtherIsConst&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes" kindref="compound">SimplicialComplexAttributes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes" kindref="compound">SimplicialComplexAttributes&lt;OtherIsConst, N&gt;</ref>&amp;<sp/>o)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(!OtherIsConst)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_attributes(o.m_attributes)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1acc738e0cceb84ff6819aa0a1ec63fccf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="classuipc_1_1geometry_1_1_attribute_slot" kindref="compound">AttributeSlot&lt;TopoValueT&gt;</ref>&amp;<sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1acc738e0cceb84ff6819aa0a1ec63fccf" kindref="member">topo</ref>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(!IsConst<sp/>&amp;&amp;<sp/>N<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_attributes.template<sp/>find&lt;TopoValueT&gt;(</highlight><highlight class="stringliteral">&quot;topo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuipc_1_1geometry_1_1_attribute_slot" kindref="compound">AttributeSlot&lt;TopoValueT&gt;</ref>&amp;<sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1acc738e0cceb84ff6819aa0a1ec63fccf" kindref="member">topo</ref>()<sp/>const</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requires(N<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_attributes.template<sp/>find&lt;TopoValueT&gt;(</highlight><highlight class="stringliteral">&quot;topo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1ad7bc2ee9fe0e4916837604f58e80c0d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1ad7bc2ee9fe0e4916837604f58e80c0d6" kindref="member">resize</ref>(SizeT<sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1a200a4c1b03ad3c498f37563531e8464f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(!IsConst)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_attributes.resize(<ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1a200a4c1b03ad3c498f37563531e8464f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1a5e73379d11c52c9ff86e6e1238eaa9d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1a5e73379d11c52c9ff86e6e1238eaa9d0" kindref="member">reserve</ref>(SizeT<sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1a200a4c1b03ad3c498f37563531e8464f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(!IsConst)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_attributes.reserve(<ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1a200a4c1b03ad3c498f37563531e8464f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76" refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1a4a5b6daae7a7fe1e8d123457fcf23b15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1a4a5b6daae7a7fe1e8d123457fcf23b15" kindref="member">clear</ref>()</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(!IsConst)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_attributes.clear();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84" refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1a200a4c1b03ad3c498f37563531e8464f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>SizeT<sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1a200a4c1b03ad3c498f37563531e8464f" kindref="member">size</ref>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_attributes.size();<sp/>}</highlight></codeline>
<codeline lineno="88" refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1a96deddd675fcaca56c78f3dfb512d077" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1a96deddd675fcaca56c78f3dfb512d077" kindref="member">destroy</ref>(std::string_view<sp/>name)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(!IsConst)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_attributes.destroy(name);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="98" refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1adfe0cf96f4e08b74dee380bec3093f77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1adfe0cf96f4e08b74dee380bec3093f77" kindref="member">find</ref>(std::string_view<sp/>name)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(!IsConst)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_attributes.template<sp/>find&lt;T&gt;(name);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="108" refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1a5a0c668355a57a278febb99b034dbf2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes_1a5a0c668355a57a278febb99b034dbf2e" kindref="member">find</ref>(std::string_view<sp/>name)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::as_const(m_attributes).template<sp/>find&lt;T&gt;(name);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>create(std::string_view<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>default_value<sp/>=<sp/>{},<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_destroy<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(!IsConst)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_attributes.template<sp/>create&lt;T&gt;(name,<sp/>default_value,<sp/>allow_destroy);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>share(std::string_view<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AttributeSlot&lt;T&gt;&amp;<sp/>slot,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_destroy<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(!IsConst)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_attributes.template<sp/>share&lt;T&gt;(name,<sp/>slot,<sp/>allow_destroy);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copy_from(SimplicialComplexAttributes&lt;true,<sp/>N&gt;<sp/>other,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AttributeCopy&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>span&lt;const<sp/>string&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_names<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>span&lt;const<sp/>string&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exclude_names<sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(!IsConst)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_attributes.copy_from(other.m_attributes,<sp/>copy,<sp/>include_names,<sp/>exclude_names);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>Json<sp/>to_json()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_attributes.to_json();<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SimplicialComplex;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AbstractSimplicialComplex;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>AutoAttributeCollection&amp;<sp/>m_attributes;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>SimplicialComplexAttributes(AutoAttributeCollection&amp;<sp/>attributes)<sp/>noexcept</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_attributes(attributes)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal">};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SimplicialComplexAttributes&lt;false,<sp/>0&gt;;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SimplicialComplexAttributes&lt;true,<sp/>0&gt;;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SimplicialComplexAttributes&lt;false,<sp/>1&gt;;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SimplicialComplexAttributes&lt;true,<sp/>1&gt;;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SimplicialComplexAttributes&lt;false,<sp/>2&gt;;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SimplicialComplexAttributes&lt;true,<sp/>2&gt;;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SimplicialComplexAttributes&lt;false,<sp/>3&gt;;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SimplicialComplexAttributes&lt;true,<sp/>3&gt;;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>uipc::geometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fmt</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsConst,<sp/>uipc::IndexT<sp/>N&gt;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">formatter&lt;uipc::geometry::SimplicialComplexAttributes&lt;IsConst,<sp/>N&gt;&gt;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>formatter&lt;std::string_view&gt;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>appender<sp/>format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuipc_1_1geometry_1_1_simplicial_complex_attributes" kindref="compound">uipc::geometry::SimplicialComplexAttributes&lt;IsConst, N&gt;</ref>&amp;<sp/>attributes,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format_context&amp;<sp/>ctx)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::fmt::format_to(ctx.out(),<sp/></highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">,<sp/>attributes.m_attributes);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal">};</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>fmt</highlight></codeline>
    </programlisting>
    <location file="include/uipc/geometry/simplicial_complex_attributes.h"/>
  </compounddef>
</doxygen>
