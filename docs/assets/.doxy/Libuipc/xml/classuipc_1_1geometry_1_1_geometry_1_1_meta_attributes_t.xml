<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t" kind="class" language="C++" prot="public">
    <compoundname>uipc::geometry::Geometry::MetaAttributesT</compoundname>
    <includes refid="geometry_2geometry_8h" local="no">geometry.h</includes>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>IsConst</declname>
        <defname>IsConst</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a6e78e39b6d23ab0537925ce41f4b24ed" prot="private" static="no">
        <type>std::conditional_t&lt; IsConst, const <ref refid="classuipc_1_1geometry_1_1_attribute_collection" kindref="compound">AttributeCollection</ref>, <ref refid="classuipc_1_1geometry_1_1_attribute_collection" kindref="compound">AttributeCollection</ref> &gt;</type>
        <definition>using uipc::geometry::Geometry::MetaAttributesT&lt; IsConst &gt;::AutoAttributeCollection =  std::conditional_t&lt;IsConst, const AttributeCollection, AttributeCollection&gt;</definition>
        <argsstring></argsstring>
        <name>AutoAttributeCollection</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::AutoAttributeCollection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="85" column="9" bodyfile="include/uipc/geometry/geometry.h" bodystart="86" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a2f0b42774a40743ee3c1f6c976c77404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct fmt::formatter&lt; MetaAttributesT&lt; IsConst &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>fmt::formatter&lt; MetaAttributesT&lt; IsConst &gt; &gt;</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::formatter&lt; MetaAttributesT&lt; IsConst &gt; &gt;</qualifiedname>
        <param>
          <type>fmt::formatter&lt; <ref refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t" kindref="compound">MetaAttributesT</ref>&lt; IsConst &gt; &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="310" column="25" bodyfile="include/uipc/geometry/geometry.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a3f4c2e276b7538d13bf4eabb76c2a384" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>_IsConst</declname>
            <defname>_IsConst</defname>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class MetaAttributesT</definition>
        <argsstring></argsstring>
        <name>MetaAttributesT</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::MetaAttributesT</qualifiedname>
        <param>
          <type><ref refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t" kindref="compound">MetaAttributesT</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="89" column="22" bodyfile="include/uipc/geometry/geometry.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1abd621cd374772a67fae8b860ddfca14c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class AttributeFriend</definition>
        <argsstring></argsstring>
        <name>AttributeFriend</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::AttributeFriend</qualifiedname>
        <param>
          <type><ref refid="classuipc_1_1geometry_1_1_attribute_friend" kindref="compound">AttributeFriend</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="92" column="22" bodyfile="include/uipc/geometry/geometry.h" bodystart="92" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1ab9214cd7d0c04db701ff74c899bcbcf1" prot="private" static="no" mutable="no">
        <type>AutoAttributeCollection &amp;</type>
        <definition>AutoAttributeCollection&amp; uipc::geometry::Geometry::MetaAttributesT&lt; IsConst &gt;::m_attributes</definition>
        <argsstring></argsstring>
        <name>m_attributes</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::m_attributes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="158" column="33" bodyfile="include/uipc/geometry/geometry.h" bodystart="158" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a7c443ea8fd614ddc6c734e1a0a825823" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>uipc::geometry::Geometry::MetaAttributesT&lt; IsConst &gt;::MetaAttributesT</definition>
        <argsstring>(AutoAttributeCollection &amp;attributes)</argsstring>
        <name>MetaAttributesT</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::MetaAttributesT</qualifiedname>
        <param>
          <type>AutoAttributeCollection &amp;</type>
          <declname>attributes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="95" column="9" bodyfile="include/uipc/geometry/geometry.h" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a86e8f7fb628ab8883216d0ac1ec6f5f7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>OtherIsConst</declname>
            <defname>OtherIsConst</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>uipc::geometry::Geometry::MetaAttributesT&lt; IsConst &gt;::MetaAttributesT</definition>
        <argsstring>(const MetaAttributesT&lt; OtherIsConst &gt; &amp;o) noexcept</argsstring>
        <name>MetaAttributesT</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::MetaAttributesT</qualifiedname>
        <param>
          <type>const <ref refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t" kindref="compound">MetaAttributesT</ref>&lt; OtherIsConst &gt; &amp;</type>
          <declname>o</declname>
        </param>
    <requiresclause>(IsConst)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="101" column="9" bodyfile="include/uipc/geometry/geometry.h" bodystart="101" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a6d5d87a35f14586b5e41311f8ae9eee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>uipc::geometry::Geometry::MetaAttributesT&lt; IsConst &gt;::MetaAttributesT</definition>
        <argsstring>(const MetaAttributesT &amp;o)=default</argsstring>
        <name>MetaAttributesT</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::MetaAttributesT</qualifiedname>
        <param>
          <type>const <ref refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t" kindref="compound">MetaAttributesT</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="107" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1acee7f66e6f02dee0c7df45bf46e9296b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>uipc::geometry::Geometry::MetaAttributesT&lt; IsConst &gt;::MetaAttributesT</definition>
        <argsstring>(MetaAttributesT &amp;&amp;o)=default</argsstring>
        <name>MetaAttributesT</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::MetaAttributesT</qualifiedname>
        <param>
          <type><ref refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t" kindref="compound">MetaAttributesT</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="108" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a64b521501819af7d75042d1bd001909c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t" kindref="compound">MetaAttributesT</ref> &amp;</type>
        <definition>MetaAttributesT &amp; uipc::geometry::Geometry::MetaAttributesT&lt; IsConst &gt;::operator=</definition>
        <argsstring>(const MetaAttributesT &amp;o)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t" kindref="compound">MetaAttributesT</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="109" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1aad0ff9e3396e100161978b4f22871afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t" kindref="compound">MetaAttributesT</ref> &amp;</type>
        <definition>MetaAttributesT &amp; uipc::geometry::Geometry::MetaAttributesT&lt; IsConst &gt;::operator=</definition>
        <argsstring>(MetaAttributesT &amp;&amp;o)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::operator=</qualifiedname>
        <param>
          <type><ref refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t" kindref="compound">MetaAttributesT</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="110" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a79f1520726ffb2716738e616efcb9b5d" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto uipc::geometry::Geometry::MetaAttributesT&lt; IsConst &gt;::find</definition>
        <argsstring>(std::string_view name) &amp;&amp;</argsstring>
        <name>find</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::find</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Find an attribute by type and name, if the attribute does not exist, return nullptr. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="116" column="15" bodyfile="include/uipc/geometry/geometry.h" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1ad34166b95fd426932dbf4a367d9c2bc3" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) uipc::geometry::Geometry::MetaAttributesT&lt; IsConst &gt;::create</definition>
        <argsstring>(std::string_view name, const T &amp;init_value={}) &amp;&amp;</argsstring>
        <name>create</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::create</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>init_value</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Create an attribute with the given name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="125" column="18" bodyfile="include/uipc/geometry/geometry.h" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a6d1f7069fbacd70ffdd532887a1348f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) uipc::geometry::Geometry::MetaAttributesT&lt; IsConst &gt;::share</definition>
        <argsstring>(std::string_view name, const AttributeSlot&lt; T &gt; &amp;slot)</argsstring>
        <name>share</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::share</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classuipc_1_1geometry_1_1_attribute_slot" kindref="compound">AttributeSlot</ref>&lt; T &gt; &amp;</type>
          <declname>slot</declname>
        </param>
    <requiresclause>(!IsConst)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="131" column="18" bodyfile="include/uipc/geometry/geometry.h" bodystart="131" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1af0af9b3c1251a0ab49c0f9b1c9492933" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type>void</type>
        <definition>void uipc::geometry::Geometry::MetaAttributesT&lt; IsConst &gt;::destroy</definition>
        <argsstring>(std::string_view name) &amp;&amp;</argsstring>
        <name>destroy</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::destroy</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
    <requiresclause>(!IsConst)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classuipc_1_1geometry_1_1_attribute_collection_1aa8e469b36fcc1bf03ca58b5310d94d75" kindref="member">AttributeCollection::destroy</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="140" column="14" bodyfile="include/uipc/geometry/geometry.h" bodystart="140" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1adcec3ffc19337322f77b58318b9cce9f" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type>void</type>
        <definition>void uipc::geometry::Geometry::MetaAttributesT&lt; IsConst &gt;::copy_from</definition>
        <argsstring>(MetaAttributesT&lt; true &gt; other, const AttributeCopy &amp;copy={}, span&lt; const string &gt; include_names={}, span&lt; const string &gt; exclude_names={}) &amp;&amp;</argsstring>
        <name>copy_from</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::copy_from</qualifiedname>
        <param>
          <type><ref refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t" kindref="compound">MetaAttributesT</ref>&lt; true &gt;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classuipc_1_1geometry_1_1_attribute_copy" kindref="compound">AttributeCopy</ref> &amp;</type>
          <declname>copy</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>span&lt; const string &gt;</type>
          <declname>include_names</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>span&lt; const string &gt;</type>
          <declname>exclude_names</declname>
          <defval>{}</defval>
        </param>
    <requiresclause>(!IsConst)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="146" column="14" bodyfile="include/uipc/geometry/geometry.h" bodystart="146" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a2db4650bfc4eb80b5352686d2692c2ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Json</type>
        <definition>Json uipc::geometry::Geometry::MetaAttributesT&lt; IsConst &gt;::to_json</definition>
        <argsstring>() const</argsstring>
        <name>to_json</name>
        <qualifiedname>uipc::geometry::Geometry::MetaAttributesT::to_json</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/geometry.h" line="155" column="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A wrapper class for the meta attributes of a geometries. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/uipc/geometry/geometry.h" line="81" column="5" bodyfile="include/uipc/geometry/geometry.h" bodystart="82" bodyend="159"/>
    <listofallmembers>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1abd621cd374772a67fae8b860ddfca14c" prot="private" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>AttributeFriend</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a6e78e39b6d23ab0537925ce41f4b24ed" prot="private" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>AutoAttributeCollection</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1adcec3ffc19337322f77b58318b9cce9f" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>copy_from</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1ad34166b95fd426932dbf4a367d9c2bc3" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>create</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1af0af9b3c1251a0ab49c0f9b1c9492933" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>destroy</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a79f1520726ffb2716738e616efcb9b5d" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>find</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a2f0b42774a40743ee3c1f6c976c77404" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>fmt::formatter&lt; MetaAttributesT&lt; IsConst &gt; &gt;</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1ab9214cd7d0c04db701ff74c899bcbcf1" prot="private" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>m_attributes</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a3f4c2e276b7538d13bf4eabb76c2a384" prot="private" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>MetaAttributesT</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a7c443ea8fd614ddc6c734e1a0a825823" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>MetaAttributesT</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a86e8f7fb628ab8883216d0ac1ec6f5f7" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>MetaAttributesT</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a6d5d87a35f14586b5e41311f8ae9eee5" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>MetaAttributesT</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1acee7f66e6f02dee0c7df45bf46e9296b" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>MetaAttributesT</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a64b521501819af7d75042d1bd001909c" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>operator=</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1aad0ff9e3396e100161978b4f22871afd" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>operator=</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a6d1f7069fbacd70ffdd532887a1348f6" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>share</name></member>
      <member refid="classuipc_1_1geometry_1_1_geometry_1_1_meta_attributes_t_1a2db4650bfc4eb80b5352686d2692c2ed" prot="public" virt="non-virtual"><scope>uipc::geometry::Geometry::MetaAttributesT</scope><name>to_json</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
