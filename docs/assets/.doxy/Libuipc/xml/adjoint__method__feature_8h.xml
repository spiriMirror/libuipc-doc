<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="adjoint__method__feature_8h" kind="file" language="C++">
    <compoundname>adjoint_method_feature.h</compoundname>
    <includes refid="feature_8h" local="no">uipc/core/feature.h</includes>
    <includes refid="buffer__view_8h" local="no">uipc/backend/buffer_view.h</includes>
    <incdepgraph>
      <node id="11">
        <label>uipc/backend/buffer_view.h</label>
        <link refid="buffer__view_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>uipc/backend/type_define.h</label>
        <link refid="backend_2type__define_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>uipc/common/allocator.h</label>
        <link refid="allocator_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>uipc/common/dllexport.h</label>
        <link refid="dllexport_8h_source"/>
      </node>
      <node id="6">
        <label>uipc/common/smart_pointer.h</label>
        <link refid="smart__pointer_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>uipc/common/type_define.h</label>
        <link refid="common_2type__define_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>uipc/core/feature.h</label>
        <link refid="feature_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/uipc/diff_sim/adjoint_method_feature.h</label>
        <link refid="adjoint__method__feature_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Eigen/Core</label>
      </node>
      <node id="13">
        <label>cinttypes</label>
      </node>
      <node id="10">
        <label>details/smart_pointer.inl</label>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
      <node id="8">
        <label>memory_resource</label>
      </node>
    </incdepgraph>
    <innerclass refid="classuipc_1_1diff__sim_1_1_adjoint_method_feature_overrider" prot="public">uipc::diff_sim::AdjointMethodFeatureOverrider</innerclass>
    <innerclass refid="classuipc_1_1diff__sim_1_1_adjoint_method_feature" prot="public">uipc::diff_sim::AdjointMethodFeature</innerclass>
    <innernamespace refid="namespaceuipc">uipc</innernamespace>
    <innernamespace refid="namespaceuipc_1_1diff__sim">uipc::diff_sim</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uipc/core/feature.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uipc/backend/buffer_view.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">uipc::diff_sim</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7" refid="classuipc_1_1diff__sim_1_1_adjoint_method_feature_overrider" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UIPC_CORE_API<sp/><ref refid="classuipc_1_1diff__sim_1_1_adjoint_method_feature_overrider" kindref="compound">AdjointMethodFeatureOverrider</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>do_select_dofs(SizeT<sp/>frame,<sp/><ref refid="classuipc_1_1backend_1_1_buffer_view" kindref="compound">backend::BufferView</ref><sp/>in_SDI)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>do_receive_dofs(<ref refid="classuipc_1_1backend_1_1_buffer_view" kindref="compound">backend::BufferView</ref><sp/>out_dofs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>do_compute_dLdP(<ref refid="classuipc_1_1backend_1_1_buffer_view" kindref="compound">backend::BufferView</ref><sp/>out_dLdP,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuipc_1_1backend_1_1_buffer_view" kindref="compound">backend::BufferView</ref><sp/>in_dLdx)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classuipc_1_1diff__sim_1_1_adjoint_method_feature" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UIPC_CORE_API<sp/><ref refid="classuipc_1_1diff__sim_1_1_adjoint_method_feature" kindref="compound">AdjointMethodFeature</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classuipc_1_1core_1_1_feature" kindref="compound">core::Feature</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Impl;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string_view<sp/>FeatureName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;diff_sim/adjoint_method&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuipc_1_1diff__sim_1_1_adjoint_method_feature" kindref="compound">AdjointMethodFeature</ref>(S&lt;AdjointMethodFeatureOverrider&gt;<sp/>overrider);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classuipc_1_1diff__sim_1_1_adjoint_method_feature_1a109584048eb2049fb739c5fea6eb9d78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuipc_1_1diff__sim_1_1_adjoint_method_feature_1a109584048eb2049fb739c5fea6eb9d78" kindref="member">select_dofs</ref>(SizeT<sp/>frame,<sp/><ref refid="classuipc_1_1backend_1_1_buffer_view" kindref="compound">backend::BufferView</ref><sp/>in_SDI);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classuipc_1_1diff__sim_1_1_adjoint_method_feature_1a2d03637c3054e3ff38c3e3111cd8481f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuipc_1_1diff__sim_1_1_adjoint_method_feature_1a2d03637c3054e3ff38c3e3111cd8481f" kindref="member">receive_dofs</ref>(<ref refid="classuipc_1_1backend_1_1_buffer_view" kindref="compound">backend::BufferView</ref><sp/>out_Dofs);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classuipc_1_1diff__sim_1_1_adjoint_method_feature_1acaf102d70109b4b2e59e84455f428f64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuipc_1_1diff__sim_1_1_adjoint_method_feature_1acaf102d70109b4b2e59e84455f428f64" kindref="member">compute_dLdP</ref>(<ref refid="classuipc_1_1backend_1_1_buffer_view" kindref="compound">backend::BufferView</ref><sp/>out_dLdP,<sp/><ref refid="classuipc_1_1backend_1_1_buffer_view" kindref="compound">backend::BufferView</ref><sp/>in_dLdX);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string_view<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_name()<sp/>const<sp/>final<sp/>override;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>S&lt;<ref refid="classuipc_1_1diff__sim_1_1_adjoint_method_feature_overrider" kindref="compound">AdjointMethodFeatureOverrider</ref>&gt;<sp/>m_impl;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>SizeT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_calling_frame<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>uipc::diff_sim</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/uipc/diff_sim/adjoint_method_feature.h"/>
  </compounddef>
</doxygen>
