<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classuipc_1_1geometry_1_1_simplex_utils" kind="class" language="C++" prot="public">
    <compoundname>uipc::geometry::SimplexUtils</compoundname>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_simplex_utils_1abe74b3943867b4ba5440b2785d957df6" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool uipc::geometry::SimplexUtils::is_same_edge</definition>
        <argsstring>(const Vector2i &amp;, const Vector2i &amp;) noexcept</argsstring>
        <name>is_same_edge</name>
        <qualifiedname>uipc::geometry::SimplexUtils::is_same_edge</qualifiedname>
        <param>
          <type>const Vector2i &amp;</type>
        </param>
        <param>
          <type>const Vector2i &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/utils/simplex_utils.h" line="10" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_simplex_utils_1a853d297ae9a0f26a2e43b9e83e6001f7" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool uipc::geometry::SimplexUtils::is_same_oriented_edge</definition>
        <argsstring>(const Vector2i &amp;, const Vector2i &amp;) noexcept</argsstring>
        <name>is_same_oriented_edge</name>
        <qualifiedname>uipc::geometry::SimplexUtils::is_same_oriented_edge</qualifiedname>
        <param>
          <type>const Vector2i &amp;</type>
        </param>
        <param>
          <type>const Vector2i &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/utils/simplex_utils.h" line="11" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_simplex_utils_1ae393ecb14341c56b398e91aa1dd6c448" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool uipc::geometry::SimplexUtils::is_same_tri</definition>
        <argsstring>(const Vector3i &amp;, const Vector3i &amp;) noexcept</argsstring>
        <name>is_same_tri</name>
        <qualifiedname>uipc::geometry::SimplexUtils::is_same_tri</qualifiedname>
        <param>
          <type>const Vector3i &amp;</type>
        </param>
        <param>
          <type>const Vector3i &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/utils/simplex_utils.h" line="12" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_simplex_utils_1a37365e64503459d443a30b199d565134" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool uipc::geometry::SimplexUtils::is_same_oriented_tri</definition>
        <argsstring>(const Vector3i &amp;, const Vector3i &amp;) noexcept</argsstring>
        <name>is_same_oriented_tri</name>
        <qualifiedname>uipc::geometry::SimplexUtils::is_same_oriented_tri</qualifiedname>
        <param>
          <type>const Vector3i &amp;</type>
        </param>
        <param>
          <type>const Vector3i &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/utils/simplex_utils.h" line="13" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_simplex_utils_1a02a576e8c99ff2cb0818abb5ce64eab4" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool uipc::geometry::SimplexUtils::is_same_tet</definition>
        <argsstring>(const Vector4i &amp;, const Vector4i &amp;) noexcept</argsstring>
        <name>is_same_tet</name>
        <qualifiedname>uipc::geometry::SimplexUtils::is_same_tet</qualifiedname>
        <param>
          <type>const Vector4i &amp;</type>
        </param>
        <param>
          <type>const Vector4i &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/utils/simplex_utils.h" line="14" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_simplex_utils_1ae6ad9b232c2f2b6d27d409798826a19a" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool uipc::geometry::SimplexUtils::is_same_oriented_tet</definition>
        <argsstring>(const Vector4i &amp;, const Vector4i &amp;) noexcept</argsstring>
        <name>is_same_oriented_tet</name>
        <qualifiedname>uipc::geometry::SimplexUtils::is_same_oriented_tet</qualifiedname>
        <param>
          <type>const Vector4i &amp;</type>
        </param>
        <param>
          <type>const Vector4i &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/utils/simplex_utils.h" line="15" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_simplex_utils_1af56d6ac0945c96dabd9befc61e087b5b" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool uipc::geometry::SimplexUtils::compare_edge</definition>
        <argsstring>(const Vector2i &amp;, const Vector2i &amp;) noexcept</argsstring>
        <name>compare_edge</name>
        <qualifiedname>uipc::geometry::SimplexUtils::compare_edge</qualifiedname>
        <param>
          <type>const Vector2i &amp;</type>
        </param>
        <param>
          <type>const Vector2i &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/utils/simplex_utils.h" line="16" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_simplex_utils_1a6e9ff3cb3270b00b46c4177d8f6fba73" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool uipc::geometry::SimplexUtils::compare_tri</definition>
        <argsstring>(const Vector3i &amp;, const Vector3i &amp;) noexcept</argsstring>
        <name>compare_tri</name>
        <qualifiedname>uipc::geometry::SimplexUtils::compare_tri</qualifiedname>
        <param>
          <type>const Vector3i &amp;</type>
        </param>
        <param>
          <type>const Vector3i &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/utils/simplex_utils.h" line="17" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_simplex_utils_1a80eb06e7278a4ca66edb9e42c0de1ab6" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool uipc::geometry::SimplexUtils::compare_tet</definition>
        <argsstring>(const Vector4i &amp;, const Vector4i &amp;) noexcept</argsstring>
        <name>compare_tet</name>
        <qualifiedname>uipc::geometry::SimplexUtils::compare_tet</qualifiedname>
        <param>
          <type>const Vector4i &amp;</type>
        </param>
        <param>
          <type>const Vector4i &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/utils/simplex_utils.h" line="18" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classuipc_1_1geometry_1_1_simplex_utils_1a72d24b249f5917317c6baaabf6b06428" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void uipc::geometry::SimplexUtils::outward_tri_from_tet</definition>
        <argsstring>(span&lt; const Vector3, 4 &gt; Vs, span&lt; Vector3i, 4 &gt; Fs) noexcept</argsstring>
        <name>outward_tri_from_tet</name>
        <qualifiedname>uipc::geometry::SimplexUtils::outward_tri_from_tet</qualifiedname>
        <param>
          <type>span&lt; const Vector3, 4 &gt;</type>
          <declname>Vs</declname>
        </param>
        <param>
          <type>span&lt; Vector3i, 4 &gt;</type>
          <declname>Fs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uipc/geometry/utils/simplex_utils.h" line="20" column="17"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/uipc/geometry/utils/simplex_utils.h" line="7" column="1" bodyfile="include/uipc/geometry/utils/simplex_utils.h" bodystart="8" bodyend="21"/>
    <listofallmembers>
      <member refid="classuipc_1_1geometry_1_1_simplex_utils_1af56d6ac0945c96dabd9befc61e087b5b" prot="public" virt="non-virtual"><scope>uipc::geometry::SimplexUtils</scope><name>compare_edge</name></member>
      <member refid="classuipc_1_1geometry_1_1_simplex_utils_1a80eb06e7278a4ca66edb9e42c0de1ab6" prot="public" virt="non-virtual"><scope>uipc::geometry::SimplexUtils</scope><name>compare_tet</name></member>
      <member refid="classuipc_1_1geometry_1_1_simplex_utils_1a6e9ff3cb3270b00b46c4177d8f6fba73" prot="public" virt="non-virtual"><scope>uipc::geometry::SimplexUtils</scope><name>compare_tri</name></member>
      <member refid="classuipc_1_1geometry_1_1_simplex_utils_1abe74b3943867b4ba5440b2785d957df6" prot="public" virt="non-virtual"><scope>uipc::geometry::SimplexUtils</scope><name>is_same_edge</name></member>
      <member refid="classuipc_1_1geometry_1_1_simplex_utils_1a853d297ae9a0f26a2e43b9e83e6001f7" prot="public" virt="non-virtual"><scope>uipc::geometry::SimplexUtils</scope><name>is_same_oriented_edge</name></member>
      <member refid="classuipc_1_1geometry_1_1_simplex_utils_1ae6ad9b232c2f2b6d27d409798826a19a" prot="public" virt="non-virtual"><scope>uipc::geometry::SimplexUtils</scope><name>is_same_oriented_tet</name></member>
      <member refid="classuipc_1_1geometry_1_1_simplex_utils_1a37365e64503459d443a30b199d565134" prot="public" virt="non-virtual"><scope>uipc::geometry::SimplexUtils</scope><name>is_same_oriented_tri</name></member>
      <member refid="classuipc_1_1geometry_1_1_simplex_utils_1a02a576e8c99ff2cb0818abb5ce64eab4" prot="public" virt="non-virtual"><scope>uipc::geometry::SimplexUtils</scope><name>is_same_tet</name></member>
      <member refid="classuipc_1_1geometry_1_1_simplex_utils_1ae393ecb14341c56b398e91aa1dd6c448" prot="public" virt="non-virtual"><scope>uipc::geometry::SimplexUtils</scope><name>is_same_tri</name></member>
      <member refid="classuipc_1_1geometry_1_1_simplex_utils_1a72d24b249f5917317c6baaabf6b06428" prot="public" virt="non-virtual"><scope>uipc::geometry::SimplexUtils</scope><name>outward_tri_from_tet</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
